@isTest
public class ProductRestAPIController_Test {
    @testSetup
    public static void setup(){
        List<Product__c> prdtList = new List<Product__c>();
        for(Integer i=0;i<5;i++){
            Product__c product = new Product__c();
            product.name = 'Test '+i;
            product.Product_code__c = 'abc-00'+i;
            prdtList.add(product);
        }
        insert prdtList;
    }
    
    @isTest
    static void checkProductDetails_Success() {
        
        
        RestRequest request = new RestRequest();
        Product__c product = [SELECT Id,Name FROM Product__c WHERE Name='Test 0'];
        
        system.debug('product== ' + product );
        //ID IDS = 'a0F5i00000HpbdJEAR';
        request.requestURI = '/services/apexrest/products/' +  product.IDS;
        RestContext.request = request;
        
        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;
        
        ProductRestAPI.ProductDetail response = ProductRestAPI.getProducts();
        
        System.assertEquals(true, response.success);
        System.assertEquals('Product details retrieved successfully', response.message);
        System.assertEquals(product.Id, response.productId);
        System.assertEquals(product.Name, response.productName);
        System.assertEquals(200, RestContext.response.statusCode);
        
    }
    
    @isTest
    static void checkProductDetails_Wrong() {


        RestRequest request = new RestRequest();
        
        Id IDS = '0035i000009tPW5AAM';
        
        request.requestURI = '/services/apexrest/products/' + IDS ;
        RestContext.request = request;

        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;

		ProductRestAPI.ProductDetail response = ProductRestAPI.getProducts();
        
		System.assertEquals(false, response.success);
        System.assertEquals('There is no Product with the Id', response.message);
        //System.assertEquals(400, RestContext.response.statusCode);

}
    @isTest
    static void checkProducttDetails_Missing() {


        RestRequest request = new RestRequest();
        request.requestURI = '/services/apexrest/accountDetails/' ;
        RestContext.request = request;

        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;

		ProductRestAPI.ProductDetail response = ProductRestAPI.getProducts();
        
		System.assertEquals(false, response.success);
        System.assertEquals('Product ID is required', response.message);
       // System.assertEquals(400, RestContext.response.statusCode);

}
		
     @isTest
		static void checkProductDelete(){
			RestRequest request = new RestRequest();
			Product__c product = [SELECT Id,Name FROM Product__c WHERE Name='Test 0'];

			system.debug('product== ' + product );
			//ID IDS = 'a0F5i00000HpbdJEAR';
			request.requestURI = '/services/apexrest/products/' +  product.id;
			RestContext.request = request;

			RestResponse responseMock = new RestResponse();
			RestContext.response = responseMock;

			ProductRestAPI.ProductDetail response = ProductRestAPI.deleteProducts();

			System.assertEquals(true, response.success);
			System.assertEquals('Product deleted successfully', response.message);
			System.assertEquals(product.Id, response.productId);
			System.assertEquals(product.Name, response.productName);

		} 
    
		@isTest
    	static void checkProductDeleteDetails_Missing() {


        	RestRequest request = new RestRequest();
        	request.requestURI = '/services/apexrest/accountDetails/' ;
       		RestContext.request = request;

        	RestResponse responseMock = new RestResponse();
       		RestContext.response = responseMock;

			ProductRestAPI.ProductDetail response = ProductRestAPI.deleteProducts();
        
		System.assertEquals(false, response.success);
        System.assertEquals('Product ID is required', response.message);
       // System.assertEquals(400, RestContext.response.statusCode);

}
    
	 @isTest
    static void checkPrdtDeleteDetails_Wrong() {


        RestRequest request = new RestRequest();
        
        Id IDS = '0035i000009tPW5AAM';
        
        request.requestURI = '/services/apexrest/products/' + IDS ;
        RestContext.request = request;

        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;

		ProductRestAPI.ProductDetail response = ProductRestAPI.deleteProducts();
        
		System.assertEquals(false, response.success);
        System.assertEquals('There is no Product with the Id', response.message);
        //System.assertEquals(400, RestContext.response.statusCode);

}
	
		
    
    @isTest
    static void checkProductInsert(){
        	
        	RestRequest request = new RestRequest();
        	request.requestURI = '/services/apexrest/accountDetails/' ;
       		RestContext.request = request;

        	RestResponse responseMock = new RestResponse();
       		RestContext.response = responseMock;
        
        	ProductRestAPI.ProductDetail response = ProductRestAPI.createProducts('Test 0','abc-000');
        
        	 System.assertEquals(true, response.success);
       		 System.assertEquals('Product Inserted successfully', response.message);
       

    }
    
        @isTest
    static void checkProductNameMissing(){
        	
        	RestRequest request = new RestRequest();
        	request.requestURI = '/services/apexrest/accountDetails/' ;
       		RestContext.request = request;

        	RestResponse responseMock = new RestResponse();
       		RestContext.response = responseMock;
        
        	ProductRestAPI.ProductDetail response = ProductRestAPI.createProducts(null,'abc-000');
        
        	 System.assertEquals(false, response.success);
       		 System.assertEquals('Product Name is required', response.message);
       

    }
    
    	@isTest
    	static void checkProductUpdate(){
		
        RestRequest request = new RestRequest();
        Product__c product = [SELECT Id,Name FROM Product__c WHERE Name='Test 0'];       
       
        request.requestURI = '/services/apexrest/products/' +  product.id;
        RestContext.request = request;
        
        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;
            
        ProductRestAPI.ProductDetail response = ProductRestAPI.updateProducts('Test 0','abc-001');
            
        System.assertEquals(true, response.success);
        System.assertEquals('Product Updated successfully', response.message);
        System.assertEquals(product.Id, response.productId);
        System.assertEquals(product.Name, response.productName);
        //System.assertEquals(200, RestContext.response.statusCode);    
            
    }
    
    
    	@isTest
    	static void checkPrdtUpdateteDetails_Missing() {


        	RestRequest request = new RestRequest();
        	request.requestURI = '/services/apexrest/accountDetails/' ;
       		RestContext.request = request;

        	RestResponse responseMock = new RestResponse();
       		RestContext.response = responseMock;

			ProductRestAPI.ProductDetail response = ProductRestAPI.updateProducts('Test 0','abc-000');
        
		System.assertEquals(false, response.success);
        System.assertEquals('Product ID is required', response.message);
       // System.assertEquals(400, RestContext.response.statusCode);

}

    
	 @isTest
    static void checkPrdtUPdateDetails_Wrong() {


        RestRequest request = new RestRequest();
        
        Id IDS = '0035i000009tPW5AAM';
        
        request.requestURI = '/services/apexrest/products/' + IDS ;
        RestContext.request = request;

        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;

		ProductRestAPI.ProductDetail response = ProductRestAPI.updateProducts('Test 0','abc-000');
        
		System.assertEquals(false, response.success);
        System.assertEquals('There is no Product with the Id', response.message);
        //System.assertEquals(400, RestContext.response.statusCode);

} 

	
    
}
